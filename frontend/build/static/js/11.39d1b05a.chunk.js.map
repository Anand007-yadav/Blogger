{"version":3,"sources":["components/CreatePosts.js"],"names":["baseURL","process","REACT_APP_BASEURL","CreatePosts","state","title","body","author","date","Date","isLoggedIn","handleChange","bind","handleSubmit","handleEditorChange","sessionStorage","getItem","this","setState","event","editor","data","getData","target","name","value","preventDefault","sanitizedData","sanitizeHtml","trim","length","alert","document","querySelector","style","display","Blog","axios","post","then","res","window","location","catch","err","console","log","className","role","onSubmit","type","onChange","required","placeholder","ClassicEditor","config","toolbar","onClick","data-dismiss","aria-label","aria-hidden","Component"],"mappings":"qPAMMA,EAAUC,0WAAYC,mBAAqB,wBAE3CC,E,kDACF,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTC,MAAO,GACPC,KAAM,GACNC,OAAQ,GACRC,KAAM,IAAIC,KACVC,YAAY,GAGhB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAbhB,E,gEAkBmC,SAAzCG,eAAeC,QAAQ,eACvBC,KAAKC,SAAS,CACVX,OAAQQ,eAAeC,QAAQ,YAC/BN,YAAY,M,yCAKLS,EAAOC,GACtB,IAAMC,EAAOD,EAAOE,UACpBL,KAAKC,SAAS,CAAEZ,KAAMe,M,mCAGbF,GAAQ,IAAD,EACQA,EAAMI,OAAtBC,EADQ,EACRA,KAAMC,EADE,EACFA,MAEdR,KAAKC,SAAL,eACKM,EAAOC,M,mCAIHN,GACTA,EAAMO,iBAENT,KAAKC,SAAS,CAAEV,KAAM,IAAIC,OAG1B,IAAMkB,EAAgBC,IAAaX,KAAKb,MAAME,KAAKuB,QAGnD,GAAIF,EAAcG,OAAS,IACvBC,MAAM,wCACH,CAEHC,SAASC,cAAc,sBAAsBC,MAAMC,QAAU,OAE7DlB,KAAKC,SAAS,CAAEZ,KAAMqB,IAEtB,IAAMS,EAAO,CACT/B,MAAOY,KAAKb,MAAMC,MAClBE,OAAQU,KAAKb,MAAMG,OACnBD,KAAMW,KAAKb,MAAME,KACjBE,KAAMS,KAAKb,MAAMI,MAGrB6B,IACKC,KADL,UACatC,EADb,yBAC6CoC,GACxCG,MAAK,SAACC,GAAD,OAAUC,OAAOC,SAAW,YACjCC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,S,+BAKpC,OAAI3B,KAAKb,MAAMM,WAEP,6BAEI,yBACIqC,UAAU,oBACVb,MAAO,CAAEC,QAAS,SAElB,yBAAKY,UAAU,iBAAiBC,KAAK,UACjC,0BAAMD,UAAU,WAAhB,gBAIR,yBAAKA,UAAU,YACX,mDAEI,0BAAMA,UAAU,aAAhB,MAEJ,0BAAME,SAAUhC,KAAKJ,cACjB,yBAAKkC,UAAU,cACX,2BAAOA,UAAU,aAAjB,WACA,2BACIA,UAAU,yBACVG,KAAK,OACL1B,KAAK,QACLC,MAAOR,KAAKb,MAAMC,MAClB8C,SAAUlC,KAAKN,aACfyC,UAAQ,EACRC,YAAY,oBAGpB,6BACI,kBAAC,IAAD,CACIjC,OAAQkC,IACRH,SAAUlC,KAAKH,mBACfyC,OAAQ,CACJF,YACI,sCACJG,QAAS,CACL,UACA,IACA,OACA,SACA,OACA,eACA,eACA,IACA,aACA,aACA,OACA,YAKhB,6BACA,yBAAKT,UAAU,cACX,2BACIG,KAAK,SACLzB,MAAM,cACNsB,UAAU,uCAS9B,yBACIA,UAAU,sBACVC,KAAK,QACLS,QAAS,kBAAOhB,OAAOC,SAAW,WAHtC,0CAMI,4BACIQ,KAAK,SACLH,UAAU,QACVW,eAAa,QACbC,aAAW,SAEX,0BAAMC,cAAY,OAAOb,UAAU,eAAnC,OACY,W,GA1JVc,aAmKX1D","file":"static/js/11.39d1b05a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport sanitizeHtml from \"sanitize-html\";\r\n\r\nconst baseURL = process.env.REACT_APP_BASEURL || \"http://localhost:5000\";\r\n\r\nclass CreatePosts extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            body: \"\",\r\n            author: \"\",\r\n            date: new Date(),\r\n            isLoggedIn: false,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleEditorChange = this.handleEditorChange.bind(this);\r\n    }\r\n\r\n    // Set author name from logged in user's profile\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem(\"isLoggedIn\") === \"true\") {\r\n            this.setState({\r\n                author: sessionStorage.getItem(\"username\"),\r\n                isLoggedIn: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleEditorChange(event, editor) {\r\n        const data = editor.getData();\r\n        this.setState({ body: data });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({ date: new Date() });\r\n\r\n        // sanitize data before setting state\r\n        const sanitizedData = sanitizeHtml(this.state.body.trim());\r\n\r\n        // If the post body is too less, do not submit\r\n        if (sanitizedData.length < 400) {\r\n            alert(\"Cannot submit such a short post!\");\r\n        } else {\r\n            // Display a spinner until the post is submitted\r\n            document.querySelector(\".spinner-container\").style.display = \"flex\";\r\n\r\n            this.setState({ body: sanitizedData });\r\n\r\n            const Blog = {\r\n                title: this.state.title,\r\n                author: this.state.author,\r\n                body: this.state.body,\r\n                date: this.state.date,\r\n            };\r\n\r\n            axios\r\n                .post(`${baseURL}/server/posts/create/`, Blog)\r\n                .then((res) => (window.location = \"/posts\"))\r\n                .catch((err) => console.log(err));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoggedIn) {\r\n            return (\r\n                <div>\r\n                    {/* A spinner to indicate loading until new post is submitted */}\r\n                    <div\r\n                        className=\"spinner-container\"\r\n                        style={{ display: \"none\" }}\r\n                    >\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"new-post\">\r\n                        <h1>\r\n                            Create New Blog Post\r\n                            <span className=\"full-stop\">.</span>\r\n                        </h1>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"new-title\">Title: </label>\r\n                                <input\r\n                                    className=\"form-control new-title\"\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    value={this.state.title}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                    placeholder=\"The Best Title\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    onChange={this.handleEditorChange}\r\n                                    config={{\r\n                                        placeholder:\r\n                                            \"Start typing your blog post here...\",\r\n                                        toolbar: [\r\n                                            \"Heading\",\r\n                                            \"|\",\r\n                                            \"Bold\",\r\n                                            \"Italic\",\r\n                                            \"Link\",\r\n                                            \"NumberedList\",\r\n                                            \"BulletedList\",\r\n                                            \"|\",\r\n                                            \"BlockQuote\",\r\n                                            \"MediaEmbed\",\r\n                                            \"Undo\",\r\n                                            \"Redo\",\r\n                                        ],\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    value=\"Create Post\"\r\n                                    className=\"btn btn-outline-primary btn-lg\"\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div\r\n                    className=\"alert alert-warning\"\r\n                    role=\"alert\"\r\n                    onClick={() => (window.location = \"/login\")}\r\n                >\r\n                    You need to login to create a new post!\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                    >\r\n                        <span aria-hidden=\"true\" className=\"alert-close\">\r\n                            &times;{\" \"}\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default CreatePosts;\r\n"],"sourceRoot":""}