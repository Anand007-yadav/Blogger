{"version":3,"sources":["components/Navbar.component.js","components/Landing.component.js","components/Comment.component.js","components/CommentList.component.js","components/Post.component.js","components/CreatePosts.component.js","components/EditPost.component.js","components/PostsList.component.js","components/Login.component.js","components/About.component.js","components/Footer.component.js","App.js","index.js"],"names":["Navbar","state","isLoggedIn","sessionStorage","getItem","this","setState","prevState","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","window","removeItem","location","Component","Landing","role","Comment","props","src","img","alt","comment","CommentList","body","imgs","comments","noOfComments","handleSubmit","bind","handleChange","prevProps","post","event","value","target","unshift","updatedPost","axios","_id","then","res","console","log","data","catch","err","n","length","slice","map","currentcomment","key","onSubmit","onChange","placeholder","Post","deletePost","confirmDelete","get","match","params","response","error","author","confirmAlert","title","message","buttons","label","delete","dangerouslySetInnerHTML","__html","substring","trim","date","CreatePosts","Date","handleEditorChange","editor","getData","name","preventDefault","sanitizedData","sanitizeHtml","Blog","required","ClassicEditor","config","toolbar","data-dismiss","aria-hidden","EditPost","editedPost","PostsList","posts","noOfPosts","reverse","currentPost","dotenv","Login","twitterAuthHandler","user","username","screen_name","socialId","user_id","setItem","setTimeout","history","back","profileObj","googleId","count","reload","clientId","process","buttonText","onSuccess","successGoogleLogin","onFailure","failureGoogleLogin","cookiePolicy","scope","authCallback","consumerKey","consumerSecret","callbackUrl","buttonTheme","React","About","Footer","open","App","path","exact","component","CreatePost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.404837e9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { isLoggedIn: false };\r\n    }\r\n\r\n    // Update navbar component when user logs in, to display \"Login\" or \"Logout\"\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem(\"isLoggedIn\") === \"true\") {\r\n            this.setState((prevState) => {\r\n                if (!prevState.isLoggedIn) {\r\n                    return { isLoggedIn: true };\r\n                }\r\n            });\r\n        }\r\n        if (sessionStorage.getItem(\"isLoggedIn\") === \"false\") {\r\n            this.setState((prevState) => {\r\n                if (prevState.isLoggedIn) {\r\n                    return { isLoggedIn: false };\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-custom navbar-expand-lg\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    <i className=\"fas fa-pen-alt\" /> Blog\r\n                    <span className=\"full-stop\">.</span>It\r\n                </Link>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarTogglerDemo01\"\r\n                    aria-controls=\"navbarTogglerDemo01\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span>\r\n                        <i className=\"fa fa-bars\"></i>\r\n                    </span>\r\n                </button>\r\n                <div\r\n                    className=\"collapse navbar-collapse\"\r\n                    id=\"navbarTogglerDemo01\"\r\n                >\r\n                    <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                About\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/posts\" className=\"nav-link\">\r\n                                Posts\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/posts/create\" className=\"nav-link\">\r\n                                New Post\r\n                            </Link>\r\n                        </li>\r\n\r\n                        {/* Display \"Login\" or \"Logout\" link based on the state of the navbar component */}\r\n                        {!this.state.isLoggedIn ? (\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/login\" className=\"nav-link\">\r\n                                    Login\r\n                                </Link>\r\n                            </li>\r\n                        ) : (\r\n                            <li className=\"navbar-item\">\r\n                                <Link\r\n                                    to=\"/logout\"\r\n                                    className=\"nav-link\"\r\n                                    onClick={() => {\r\n                                        window.sessionStorage.removeItem(\r\n                                            \"isLoggedIn\"\r\n                                        );\r\n                                        window.sessionStorage.removeItem(\r\n                                            \"username\"\r\n                                        );\r\n                                        window.location = \"/posts\";\r\n                                    }}\r\n                                >\r\n                                    Logout\r\n                                </Link>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Landing = () => (\r\n    <div className=\"jumbotron\">\r\n        <h1 className=\"display-4\">\r\n            Just Blog It<span className=\"full-stop\">.</span>\r\n        </h1>\r\n        <p className=\"lead\">\r\n            This is a blogging platform for all your blogging needs!\r\n            <br />\r\n            Want to read some awesome blogs? We've got you covered!\r\n            <br /> Want to write an awesome blog post?\r\n            <br /> Rest assured, because we've got you covered once again!\r\n        </p>\r\n        <hr className=\"my-4 gold-hr\" />\r\n        <p>So, click below and dive right in!</p>\r\n        <Link\r\n            className=\"btn btn-outline-primary btn-lg\"\r\n            to=\"/posts\"\r\n            role=\"button\"\r\n        >\r\n            Show Blog Posts\r\n        </Link>\r\n    </div>\r\n);\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\n\r\nconst Comment = (props) => {\r\n    return (\r\n        <div className=\"comment\">\r\n            <p>\r\n                <span>\r\n                    {/* Jdenticon svg icon */}\r\n                    <img\r\n                        src={\r\n                            \"https://avatars.dicebear.com/v2/jdenticon/:\" +\r\n                            props.img +\r\n                            \".svg\"\r\n                        }\r\n                        alt=\"jdenticon\"\r\n                    />\r\n                </span>\r\n                {/* Actual body of comment */}\r\n                <span className=\"comment-body\">{props.comment}</span>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { Component } from \"react\";\r\nimport Comment from \"./Comment.component\";\r\nimport axios from \"axios\";\r\n\r\nclass CommentList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            body: \"\",\r\n            imgs: [],\r\n            comments: [],\r\n            noOfComments: 5,\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    // Get post prop\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.post !== prevProps.post)\r\n            this.setState({ comments: this.props.post.comments });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { value } = event.target;\r\n        this.setState({\r\n            body: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const { body } = this.state;\r\n        this.setState({ comments: this.state.comments.unshift(body) });\r\n\r\n        let updatedPost = this.props.post;\r\n        updatedPost.comments = this.state.comments;\r\n\r\n        axios\r\n            .post(\r\n                \"http://localhost:5000/posts/edit/\" + this.props.post._id,\r\n                updatedPost\r\n            )\r\n            .then((res) => console.log(res.data))\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        let n = 0; //For sending a unique key\r\n        return (\r\n            <div className=\"comment-list\">\r\n                <hr />\r\n                <h5 className=\"comment-heading\">\r\n                    Latest Comments<span className=\"full-stop\">.</span>\r\n                </h5>\r\n                <br />\r\n                <div>\r\n                    {/* Render comments in reverse chronological order */}\r\n                    {this.state.comments.length ? (\r\n                        <div>\r\n                            {this.state.comments\r\n                                .slice(0, this.state.noOfComments)\r\n                                .map((currentcomment) => (\r\n                                    <Comment\r\n                                        comment={currentcomment}\r\n                                        key={n++}\r\n                                        img={n + \"dkjaslc\"} // img prop is used in generating jdenticon\r\n                                    />\r\n                                ))}\r\n                        </div>\r\n                    ) : (\r\n                        <h4 id=\"first-comment\">\r\n                            Be the first person to comment on this post\r\n                            <span className=\"full-stop\">.</span>\r\n                        </h4>\r\n                    )}\r\n\r\n                    {/* The 'Load more comments' button's implementation */}\r\n                    {/* This sets state, which in turn re-renders the list of comments */}\r\n                    {this.state.comments[this.state.noOfComments] ? (\r\n                        <button\r\n                            className=\"btn btn-link\"\r\n                            onClick={() =>\r\n                                this.setState((prevState) => ({\r\n                                    noOfComments: prevState.noOfComments + 5,\r\n                                }))\r\n                            }\r\n                        >\r\n                            Load More Comments...\r\n                        </button>\r\n                    ) : (\r\n                        \" \"\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"comment-form\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Start typing your comment...\"\r\n                                value={this.state.body}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btn btn-outline-success\"\r\n                                value=\"comment\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentList;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import alert css\r\nimport CommentList from \"./CommentList.component\";\r\n\r\n// The same post component is used in the Postslist component and to SHOW the individual post component\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        // When all the Posts has to to be showed, the \"post\" prop is recieved from the Postslist compnent\r\n        super(props);\r\n        this.state = { post: {}, isLoggedIn: false };\r\n\r\n        this.deletePost = this.deletePost.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If this component is rendered to SHOW individual Post component, make an API call to get that individual post\r\n        if (!this.props.post) {\r\n            axios\r\n                .get(\r\n                    \"http://localhost:5000/posts/\" + this.props.match.params.id\r\n                )\r\n                .then((response) => {\r\n                    this.setState({ post: response.data });\r\n                })\r\n                .catch((err) => console.error(err));\r\n        }\r\n    }\r\n\r\n    // Check if the correct user is logged in to display the edit and delete buttons\r\n    componentDidUpdate() {\r\n        if (\r\n            sessionStorage.getItem(\"isLoggedIn\") === \"true\" &&\r\n            this.state.post.author === sessionStorage.getItem(\"username\")\r\n        ) {\r\n            this.setState((prevState) => {\r\n                if (!prevState.isLoggedIn) {\r\n                    return { isLoggedIn: true };\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // React-conform-alert to delete a post\r\n    confirmDelete(id) {\r\n        confirmAlert({\r\n            title: \"Confirm to delete this post.\",\r\n            message: \"Are you sure you want to do this?\",\r\n            buttons: [\r\n                {\r\n                    label: \"YES\",\r\n                    onClick: () => this.deletePost(id),\r\n                },\r\n                {\r\n                    label: \"NO  \",\r\n                    onClick: () => console.log(\"NO\"),\r\n                },\r\n            ],\r\n        });\r\n    }\r\n\r\n    deletePost(id) {\r\n        axios\r\n            .delete(\"http://localhost:5000/posts/\" + id)\r\n            .then((res) => console.log(res.data))\r\n            .catch((err) => console.error(err));\r\n\r\n        window.location = \"/posts\";\r\n    }\r\n\r\n    render() {\r\n        // When the posts are being rendered as a part of the PostsList component\r\n        if (this.props.post) {\r\n            return (\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <Link to={\"/posts/show/\" + this.props.post._id}>\r\n                            <h1 className=\"post-title\">\r\n                                {this.props.post.title}\r\n                            </h1>\r\n                            <h5>\r\n                                <span className=\"author\">\r\n                                    {this.props.post.author}\r\n                                </span>\r\n                            </h5>\r\n\r\n                            <div\r\n                                dangerouslySetInnerHTML={{\r\n                                    __html:\r\n                                        this.props.post.body\r\n                                            .substring(0, 400)\r\n                                            .trim() + \"...\",\r\n                                }}\r\n                            ></div>\r\n\r\n                            <small>\r\n                                <time>\r\n                                    <span>Published on </span>\r\n                                    {this.props.post.date.substring(8, 10) +\r\n                                        \"/\" +\r\n                                        this.props.post.date.substring(5, 7) +\r\n                                        \"/\" +\r\n                                        this.props.post.date.substring(0, 4)}\r\n                                </time>\r\n                            </small>\r\n                            <br />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        // To render the SHOW page for all the individual posts\r\n        else {\r\n            return (\r\n                <div className=\"post\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h1 className=\"post-title\">\r\n                                {this.state.post.title}\r\n                            </h1>\r\n                            <h3 className=\"author\">{this.state.post.author}</h3>\r\n                            <time>\r\n                                <span>Published on </span>\r\n                                {this.state.post.date\r\n                                    ? this.state.post.date.substring(8, 10) +\r\n                                      \"/\" +\r\n                                      this.state.post.date.substring(5, 7) +\r\n                                      \"/\" +\r\n                                      this.state.post.date.substring(0, 4)\r\n                                    : \" \"}\r\n                            </time>\r\n                            <div\r\n                                className=\"post-body\"\r\n                                dangerouslySetInnerHTML={{\r\n                                    __html: this.state.post.body,\r\n                                }}\r\n                            ></div>\r\n                            {/* Display the 'Edit' and 'Delete' buttons only if the correct user is logged in */}\r\n                            {this.state.isLoggedIn ? (\r\n                                <span>\r\n                                    <Link\r\n                                        to={\r\n                                            \"/posts/edit/\" + this.state.post._id\r\n                                        }\r\n                                        className=\"btn btn-outline-primary\"\r\n                                    >\r\n                                        Edit\r\n                                    </Link>{\" \"}\r\n                                    <button\r\n                                        onClick={() =>\r\n                                            this.confirmDelete(\r\n                                                this.state.post._id\r\n                                            )\r\n                                        }\r\n                                        className=\"btn btn-outline-danger\"\r\n                                    >\r\n                                        Delete\r\n                                    </button>\r\n                                </span>\r\n                            ) : (\r\n                                \" \"\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    {/* Render the comments below the post */}\r\n                    <CommentList post={this.state.post} />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport sanitizeHtml from \"sanitize-html\";\r\n\r\nclass CreatePosts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            body: \"\",\r\n            author: \"\",\r\n            date: new Date(),\r\n            isLoggedIn: false,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleEditorChange = this.handleEditorChange.bind(this);\r\n    }\r\n\r\n    // Set author name from logged in user's profile\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem(\"isLoggedIn\") === \"true\") {\r\n            this.setState({\r\n                author: sessionStorage.getItem(\"username\"),\r\n                isLoggedIn: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleEditorChange(event, editor) {\r\n        const data = editor.getData();\r\n        this.setState({ body: data });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({ date: new Date() });\r\n\r\n        // sanitize data before setting state\r\n        const sanitizedData = sanitizeHtml(this.state.body.trim());\r\n        this.setState({ body: sanitizedData });\r\n\r\n        const Blog = {\r\n            title: this.state.title,\r\n            author: this.state.author,\r\n            body: this.state.body,\r\n            date: this.state.date,\r\n        };\r\n\r\n        axios\r\n            .post(\"http://localhost:5000/posts/create/\", Blog)\r\n            .then((res) => (window.location = \"/posts\"))\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoggedIn) {\r\n            return (\r\n                <div className=\"new-post\">\r\n                    <h1>\r\n                        Create New Blog Post<span className=\"full-stop\">.</span>\r\n                    </h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"new-title\">Title: </label>\r\n                            <input\r\n                                className=\"form-control new-title\"\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                value={this.state.title}\r\n                                onChange={this.handleChange}\r\n                                required\r\n                                placeholder=\"The Best Title\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <CKEditor\r\n                                editor={ClassicEditor}\r\n                                onChange={this.handleEditorChange}\r\n                                config={{\r\n                                    toolbar: [\r\n                                        \"heading\",\r\n                                        \"|\",\r\n                                        \"bold\",\r\n                                        \"italic\",\r\n                                        \"link\",\r\n                                        \"bulletedList\",\r\n                                        \"numberedList\",\r\n                                        \"blockquote\",\r\n                                        \"undo\",\r\n                                        \"redo\",\r\n                                    ],\r\n                                    placeholder:\r\n                                        \"Start typing your blog post here...\",\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                value=\"Create Post\"\r\n                                className=\"btn btn-outline-primary btn-lg\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div\r\n                    className=\"alert alert-warning\"\r\n                    role=\"alert\"\r\n                    onClick={() => (window.location = \"/login\")}\r\n                >\r\n                    You need to login to create a new post!\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                    >\r\n                        <span aria-hidden=\"true\" className=\"alert-close\">\r\n                            &times;{\" \"}\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default CreatePosts;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport sanitizeHtml from \"sanitize-html\";\r\n\r\nclass EditPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            body: \"\",\r\n            author: \"\",\r\n            date: \"\",\r\n            isLoggedIn: false,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleEditorChange = this.handleEditorChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get(\"http://localhost:5000/posts/\" + this.props.match.params.id)\r\n            .then((post) => {\r\n                this.setState({\r\n                    title: post.data.title,\r\n                    body: post.data.body,\r\n                    author: post.data.author,\r\n                    date: post.data.date,\r\n                    comments: post.data.comments,\r\n                });\r\n            })\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    handleEditorChange(event, editor) {\r\n        this.setState({ body: editor.getData() });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const sanitizedData = sanitizeHtml(this.state.body);\r\n        this.setState({ body: sanitizedData });\r\n\r\n        const editedPost = {\r\n            title: this.state.title,\r\n            author: this.state.author,\r\n            body: this.state.body,\r\n            date: this.state.date,\r\n            comments: this.state.comments,\r\n        };\r\n\r\n        axios\r\n            .post(\r\n                \"http://localhost:5000/posts/edit/\" +\r\n                    this.props.match.params.id,\r\n                editedPost\r\n            )\r\n            .then(\r\n                // redirect to SHOW page\r\n                (res) =>\r\n                    (window.location =\r\n                        \"/posts/show/\" + this.props.match.params.id)\r\n            )\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"edit-post\">\r\n                <h1>\r\n                    Edit Blog Post<span className=\"full-stop\">.</span>\r\n                </h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"edit-title\">Title: </label>\r\n                        <input\r\n                            className=\"form-control edit-title\"\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            value={this.state.title}\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <CKEditor\r\n                            editor={ClassicEditor}\r\n                            data={this.state.body}\r\n                            onChange={this.handleEditorChange}\r\n                            config={{\r\n                                toolbar: [\r\n                                    \"heading\",\r\n                                    \"|\",\r\n                                    \"bold\",\r\n                                    \"italic\",\r\n                                    \"link\",\r\n                                    \"bulletedList\",\r\n                                    \"numberedList\",\r\n                                    \"blockquote\",\r\n                                    \"undo\",\r\n                                    \"redo\",\r\n                                ],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Submit Post\"\r\n                            className=\"btn btn-outline-primary btn-lg\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditPost;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Post from \"./Post.component\";\r\n\r\nclass PostsList extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            posts: [],\r\n            // Set the no of posts to be rendered to 5\r\n            noOfPosts: 5,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get(\"http://localhost:5000/posts/\")\r\n            .then((response) => {\r\n                // The order of posts is reversed to display the posts in reverse chronological order\r\n                this.setState({ posts: response.data.reverse() });\r\n            })\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"posts-list\">\r\n                <h1 id=\"title\">\r\n                    Latest Posts<span className=\"full-stop\">.</span>\r\n                </h1>\r\n                {/* Display the posts in reverse chronological order */}\r\n                {this.state.posts\r\n                    .slice(0, this.state.noOfPosts)\r\n                    .map((currentPost) => (\r\n                        <Post post={currentPost} key={currentPost._id} />\r\n                    ))}\r\n\r\n                {/* To load more posts */}\r\n                {this.state.posts[this.state.noOfPosts] ? (\r\n                    <button\r\n                        className=\"btn btn-link\"\r\n                        onClick={() =>\r\n                            // When the button is clicked change the state to reflect the change in the no of posts beoing rendered, which triggers a compnent\r\n                            this.setState({\r\n                                noOfPosts: this.state.noOfPosts + 3,\r\n                            })\r\n                        }\r\n                    >\r\n                        Load More Posts...\r\n                    </button>\r\n                ) : (\r\n                    <p> </p>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostsList;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\n\r\nimport GoogleLogin from \"react-google-login\";\r\nimport TwitterLogin from \"react-twitter-login\";\r\n\r\ndotenv.config();\r\n\r\nclass Login extends React.Component {\r\n    //After logging in, redirect to previous page\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem(\"isLoggedIn\") === \"true\") {\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    // Google login success callback\r\n    successGoogleLogin(response) {\r\n        // Create an instance of the user\r\n        const user = {\r\n            username: response.profileObj.name,\r\n            socialId: response.googleId,\r\n        };\r\n\r\n        // Make an API call to either findOrCreate the user\r\n        axios\r\n            .post(\"http://localhost:5000/auth/login\", user)\r\n            .then((res) => {\r\n                // Reload the page once count is 1 to reload the navbar component and display \"Logout\" as an option instead of \"Login\"\r\n                let count = 0;\r\n\r\n                // If the response has a valid social Id\r\n                if (res.data.socialId === response.googleId) {\r\n                    // Set the username and isLoggedIn in the session storage\r\n                    sessionStorage.setItem(\"isLoggedIn\", \"true\");\r\n                    sessionStorage.setItem(\"username\", res.data.username);\r\n                    count++;\r\n\r\n                    // Remove the user session cookie after 24 hours, to log the user out.\r\n                    // This is for cases when the user doesn't end the session or doesn't logout\r\n                    window.setTimeout(() => {\r\n                        sessionStorage.removeItem(\"isLoggedIn\");\r\n                        sessionStorage.removeItem(\"username\");\r\n                    }, 24 * 60 * 60 * 60);\r\n\r\n                    // If user data is stored in the session Storage, then reload page to update Navbar component appropriately\r\n                    if (count === 1) {\r\n                        window.location.reload();\r\n                    }\r\n                }\r\n                // If user data returned is invalid, then redirect to the login page once again\r\n                else {\r\n                    window.location = \"/login\";\r\n                }\r\n            })\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    // Twitter login success callback\r\n    // Very similar to the previous google login callback\r\n    twitterAuthHandler = (err, data) => {\r\n        if (err) {\r\n            window.location = \"/login\";\r\n        } else {\r\n            const user = {\r\n                username: data.screen_name,\r\n                socialId: data.user_id,\r\n            };\r\n\r\n            axios\r\n                .post(\"http://localhost:5000/auth/login\", user)\r\n                .then((res) => {\r\n                    if (res.data.socialId) {\r\n                        let count = 0;\r\n                        sessionStorage.setItem(\"isLoggedIn\", \"true\");\r\n                        sessionStorage.setItem(\"username\", res.data.username);\r\n\r\n                        window.setTimeout(() => {\r\n                            sessionStorage.removeItem(\"isLoggedIn\");\r\n                            sessionStorage.removeItem(\"username\");\r\n                        }, 24 * 60 * 60 * 60);\r\n\r\n                        if (count === 1) {\r\n                            window.location.reload();\r\n                        }\r\n                    } else {\r\n                        window.location = \"/login\";\r\n                    }\r\n                })\r\n                .catch((err) => console.error(err));\r\n        }\r\n    };\r\n\r\n    // Google login failure callback\r\n    failureGoogleLogin(response) {\r\n        console.log(response);\r\n        window.location = \"/login\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"login\">\r\n                    <h5>\r\n                        Login with your social account\r\n                        <span className=\"full-stop\">.</span>\r\n                    </h5>\r\n                    <hr className=\"gold-hr\" />\r\n                    <div className=\"google\">\r\n                        <GoogleLogin\r\n                            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n                            buttonText=\"Log in With Google\"\r\n                            onSuccess={this.successGoogleLogin}\r\n                            onFailure={this.failureGoogleLogin}\r\n                            cookiePolicy={\"single_host_origin\"}\r\n                            scope=\"profile\"\r\n                        />\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"twitter\">\r\n                        <TwitterLogin\r\n                            authCallback={this.twitterAuthHandler}\r\n                            consumerKey={\r\n                                process.env.REACT_APP_TWITTER_CONSUMER_ID\r\n                            }\r\n                            consumerSecret={\r\n                                process.env.REACT_APP_TWITTER_CONSUMER_SECRET\r\n                            }\r\n                            callbackUrl=\"http://localhost:3000/login\"\r\n                            buttonTheme=\"light\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"about\">\r\n            <h1>\r\n                About<span className=\"full-stop\">.</span>\r\n            </h1>\r\n            <main>\r\n                <p>\r\n                    This is a Blogging app that lets a user delve into a topic\r\n                    of choice and write a blog post, or read one of the already\r\n                    uploaded Blog posts.\r\n                </p>\r\n                <p>\r\n                    In order to write your very own Blog post, you can\r\n                    conviniently login using one of your social accounts, and\r\n                    start penning your thoughts!\r\n                </p>\r\n                <p>\r\n                    You can edit your Blog post at any time, as long as you're\r\n                    logged in. If you ever feel like your post is no longer a\r\n                    valid representation of your thoughts, you can also delete\r\n                    it at any instant of time.\r\n                </p>\r\n                <p>\r\n                    You can also provide your opinions about any post, in the\r\n                    comments' section of every post, anonymously!\r\n                    <br />\r\n                    Your comment will always have a unique icon accompanying it.\r\n                </p>\r\n                <hr className=\"gold-hr\" />\r\n                <p>\r\n                    If you ever feel the need to provide criticism or drop a\r\n                    suggestion, or if you just want to say \"Nice job\", feel free\r\n                    to contact me using the links in the footer\r\n                    <span className=\"full-stop\">.</span>\r\n                </p>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => (\r\n    <footer>\r\n        Created by <span id=\"rajat\">Rajat</span>\r\n        <br />\r\n        <span>\r\n            <i\r\n                className=\"fab fa-github\"\r\n                onClick={() =>\r\n                    window.open(\"https://github.com/Rajatm544\", \"_blank\")\r\n                }\r\n            ></i>{\" \"}\r\n            <i\r\n                className=\"fab fa-hackerrank\"\r\n                onClick={() =>\r\n                    window.open(\"https://www.hackerrank.com/Rajat_M\", \"_blank\")\r\n                }\r\n            ></i>{\" \"}\r\n            <i\r\n                className=\"fab fa-linkedin\"\r\n                onClick={() =>\r\n                    window.open(\r\n                        \"https://www.linkedin.com/in/rajat--m\",\r\n                        \"_blank\"\r\n                    )\r\n                }\r\n            ></i>{\" \"}\r\n            <i\r\n                className=\"fab fa-stack-overflow\"\r\n                onClick={() =>\r\n                    window.open(\r\n                        \"https://stackoverflow.com/users/13040278/rajat-m\",\r\n                        \"_blank\"\r\n                    )\r\n                }\r\n            ></i>{\" \"}\r\n            <i\r\n                className=\"fab fa-twitter\"\r\n                onClick={() =>\r\n                    window.open(\"https://twitter.com/Rajat__m\", \"_blank\")\r\n                }\r\n            ></i>\r\n        </span>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n//Import style\r\nimport \"./stylesheets/index.css\";\r\n\r\n//Import all components\r\nimport Navbar from \"./components/Navbar.component\";\r\nimport Landing from \"./components/Landing.component\";\r\nimport Post from \"./components/Post.component\";\r\nimport CreatePost from \"./components/CreatePosts.component\";\r\nimport EditPost from \"./components/EditPost.component\";\r\nimport PostsList from \"./components/PostsList.component\";\r\nimport Login from \"./components/Login.component\";\r\nimport About from \"./components/About.component\";\r\nimport Footer from \"./components/Footer.component\";\r\n\r\nconst App = () => (\r\n    <div className=\"container\">\r\n        <Router>\r\n            <Navbar />\r\n            <Route path=\"/\" exact component={Landing}></Route>\r\n            <Route path=\"/posts\" exact component={PostsList}></Route>\r\n            <Route path=\"/posts/edit/:id\" component={EditPost}></Route>\r\n            <Route path=\"/posts/show/:id\" component={Post}></Route>\r\n            <Route path=\"/posts/create/\" component={CreatePost}></Route>\r\n            <Route path=\"/login\" exact component={Login}></Route>\r\n            <Route path=\"/about\" exact component={About}></Route>\r\n            <Footer />\r\n        </Router>\r\n    </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}